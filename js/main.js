// Generated by CoffeeScript 1.6.3
(function() {
  var Navigator, colorPin, initialize, loadMap, loadWeather, pinColors, pins, plotBikes, plotFilms,
    _this = this;

  plotFilms = function(map) {
    return $.get('locations/filmdata.csv', function(data) {
      return $.csv.toObjects(data, {}, function(err, data) {
        var item, marker, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          item = data[_i];
          _results.push(marker = new google.maps.Marker({
            position: new google.maps.LatLng(item.LATITUDE, item.LONGITUDE),
            map: map,
            title: item.Film,
            icon: pins.film
          }));
        }
        return _results;
      });
    });
  };

  plotBikes = function(map) {
    var pinAvailable, pinNotAvailable;
    pinAvailable = new colorPin(pinColors.bikeAvailable);
    pinNotAvailable = new colorPin(pinColors.bikeNotAvailable);
    return $.getJSON('bikedata.php', function(data) {
      var marker, station, thisPin, _i, _len, _ref, _results;
      _ref = data.stationBeanList;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        station = _ref[_i];
        if (station.availableBikes > 0 && station.statusValue === "In Service") {
          thisPin = pinAvailable;
        } else {
          thisPin = pinNotAvailable;
        }
        _results.push(marker = new google.maps.Marker({
          position: new google.maps.LatLng(station.latitude, station.longitude),
          map: map,
          title: station.stationName,
          icon: thisPin.pinImage(),
          shadow: thisPin.pinShadow()
        }));
      }
      return _results;
    });
  };

  pinColors = {
    bikeAvailable: '00FF00',
    bikeNotAvailable: '0000FF'
  };

  pins = {
    film: "img/noun_project_16712.png"
  };

  colorPin = (function() {
    function colorPin(color) {
      this.color = color != null ? color : "FE7569";
    }

    colorPin.prototype.pinImage = function() {
      return new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + this.color, new google.maps.Size(21, 34), new google.maps.Point(0, 0), new google.maps.Point(10, 34));
    };

    colorPin.prototype.pinShadow = function() {
      return new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow", new google.maps.Size(40, 37), new google.maps.Point(0, 0), new google.maps.Point(12, 35));
    };

    return colorPin;

  })();

  loadWeather = function() {
    var feedUrl, jsonUrl;
    feedUrl = "http://weather.yahooapis.com/forecastrss?w=12761716&u=f";
    jsonUrl = "https://ajax.googleapis.com/ajax/services/feed/load?v=1.0&q=" + encodeURIComponent(feedUrl) + "&callback=?";
    return $.getJSON(jsonUrl, function(data) {
      var match, re, weatherString;
      weatherString = data.responseData.feed.entries[0].contentSnippet;
      re = /Current Conditions:\n(.*?)\n/;
      match = weatherString.match(re);
      return $("#weather").text(match[1]);
    });
  };

  loadMap = function() {
    var map, mapOptions;
    mapOptions = {
      center: new google.maps.LatLng(40.714346, -74.005966),
      zoom: 12,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    google.maps.visualRefresh = true;
    return map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
  };

  Navigator = (function() {
    function Navigator() {}

    Navigator.prototype.navigate = function() {
      return $.getJSON('http://maps.googleapis.com/maps/api/directions/json?origin=Museum+Of+The+Moving+Image&destination=34+Ludlow+Street,NY&waypoints=30+Ludlow+St,NY|100+Canal+St,NY&sensor=false&mode=bicycling', function(data) {
        var arrival, arrival_string, departure, departure_string, end_wrap, i, item, leg, leg_end, leg_wrap, start_wrap, step, step_wrap, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3, _results;
        console.log(data);
        leg_end = [];
        departure_string = data.routes[0].legs[0].start_address;
        departure = departure_string.split(",");
        start_wrap = '<div class="departure"><b>' + departure[0] + '</b><br/>';
        _ref = departure.slice(1);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          item = _ref[_i];
          start_wrap += item + ',';
        }
        start_wrap = start_wrap.substring(0, start_wrap.lastIndexOf(','));
        start_wrap += '<br/><br/></div>';
        $(start_wrap).appendTo('div.directions');
        _ref1 = data.routes[0].legs;
        _results = [];
        for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {
          leg = _ref1[i];
          leg_end.push(leg.end_address);
          leg_wrap = '<ol class="directions">';
          $(leg_wrap).appendTo('div.directions');
          _ref2 = leg.steps;
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            step = _ref2[_k];
            step_wrap = "<li>" + step.html_instructions + '<br/><div class="dist-time">' + step.distance.text + " - about " + step.duration.text + "</div></li>";
            $(step_wrap).appendTo('ol.directions');
          }
          leg_wrap = '<div class="dist-time-lg">' + leg.distance.text + " - about " + leg.duration.text + "</div><br/>";
          $(leg_wrap).appendTo('div.directions');
          arrival_string = leg.end_address;
          arrival = arrival_string.split(",");
          end_wrap = '</ol><div class="arrival"><b>' + arrival[i] + '</b><br/>';
          _ref3 = arrival.slice(1);
          for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
            item = _ref3[_l];
            end_wrap += item + ',';
          }
          end_wrap = end_wrap.substring(0, end_wrap.lastIndexOf(','));
          end_wrap += '<br/><br/></div>';
          _results.push($(end_wrap).appendTo('div.directions'));
        }
        return _results;
      });
    };

    return Navigator;

  })();

  initialize = function() {
    var map, nav;
    loadWeather();
    map = loadMap();
    plotFilms(map);
    plotBikes(map);
    nav = new Navigator;
    return nav.navigate();
  };

  $(document).ready(function() {
    return initialize();
  });

}).call(this);
